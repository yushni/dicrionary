// Code generated by go-swagger; DO NOT EDIT.

package words

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"dictionary/api/models"
)

// AddWordOKCode is the HTTP code returned for type AddWordOK
const AddWordOKCode int = 200

/*AddWordOK Successful operation

swagger:response addWordOK
*/
type AddWordOK struct {

	/*
	  In: Body
	*/
	Payload *AddWordOKBody `json:"body,omitempty"`
}

// NewAddWordOK creates AddWordOK with default headers values
func NewAddWordOK() *AddWordOK {

	return &AddWordOK{}
}

// WithPayload adds the payload to the add word o k response
func (o *AddWordOK) WithPayload(payload *AddWordOKBody) *AddWordOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add word o k response
func (o *AddWordOK) SetPayload(payload *AddWordOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddWordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddWordBadRequestCode is the HTTP code returned for type AddWordBadRequest
const AddWordBadRequestCode int = 400

/*AddWordBadRequest Invalid input

swagger:response addWordBadRequest
*/
type AddWordBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.HTTPError `json:"body,omitempty"`
}

// NewAddWordBadRequest creates AddWordBadRequest with default headers values
func NewAddWordBadRequest() *AddWordBadRequest {

	return &AddWordBadRequest{}
}

// WithPayload adds the payload to the add word bad request response
func (o *AddWordBadRequest) WithPayload(payload *models.HTTPError) *AddWordBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add word bad request response
func (o *AddWordBadRequest) SetPayload(payload *models.HTTPError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddWordBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddWordInternalServerErrorCode is the HTTP code returned for type AddWordInternalServerError
const AddWordInternalServerErrorCode int = 500

/*AddWordInternalServerError Internal Server Error

swagger:response addWordInternalServerError
*/
type AddWordInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.HTTPError `json:"body,omitempty"`
}

// NewAddWordInternalServerError creates AddWordInternalServerError with default headers values
func NewAddWordInternalServerError() *AddWordInternalServerError {

	return &AddWordInternalServerError{}
}

// WithPayload adds the payload to the add word internal server error response
func (o *AddWordInternalServerError) WithPayload(payload *models.HTTPError) *AddWordInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add word internal server error response
func (o *AddWordInternalServerError) SetPayload(payload *models.HTTPError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddWordInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
